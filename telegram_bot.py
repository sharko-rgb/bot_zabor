from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import config
import database
import vk_api

database.init_db()

main_menu = ReplyKeyboardMarkup([
    ["üî© –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞–±–æ—Ä–∞"],
    ["üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å"],
    ["üìê –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä"],
    ["üñº –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç", "‚ùì –í–æ–ø—Ä–æ—Å"],
    ["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"]
], resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    database.save_user("telegram", user.id, user.username, user.full_name)
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –ø–æ–º–æ—á—å?",
        reply_markup=main_menu
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message or not update.message.text:
        return

    text = update.message.text
    user_id = update.message.from_user.id

    if context.user_data.get('awaiting_address'):
        address = text
        database.save_request(user_id, "–∑–∞–º–µ—Ä", f"–ê–¥—Ä–µ—Å: {address}")
        await update.message.reply_text("‚úÖ –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –° –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç.")
        await notify_vk_admin(user_id, "–∑–∞–º–µ—Ä", f"–ê–¥—Ä–µ—Å: {address}")
        context.user_data['awaiting_address'] = False
        return

    if text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text(
            "üìå –ê–¥—Ä–µ—Å: –≥. –¢—é–º–µ–Ω—å, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 1\n"
            "üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (3452) 00-00-00\n"
            "üåê –°–∞–π—Ç: https://zabory72.ru"
        )
    elif text == "üìê –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–ª—è –∑–∞–º–µ—Ä–∞:")
        context.user_data['awaiting_address'] = True

async def notify_vk_admin(user_id, request_type, data):
    user = database.get_user(user_id)
    if not user:
        return
    vk = vk_api.VkApi(token=config.VK_TOKEN)
    
    tg_link = f"tg://user?id={user_id}"
    message = (
        f"üì¢ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ Telegram\n"
        f"–¢–∏–ø: {request_type}\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user[3]} (@{user[2]})\n"
        f"–î–∞–Ω–Ω—ã–µ: {data}\n\n"
        f"‚ö° –û—Ç–≤–µ—Ç–∏—Ç—å: {tg_link}"
    )
    
    vk.method("messages.send", {
        "user_id": config.ADMIN_VK_ID,
        "message": message,
        "random_id": 0
    })

if __name__ == "__main__":
    app = Application.builder().token(config.TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()

