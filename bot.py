import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.utils.keyboard import InlineKeyboardBuilder

BOT_TOKEN = '7853853505:AAEhTPDeWUlX67naGu5JhW9-maep1yesUD0'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_TEXT = """
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –∫–æ–º–ø–∞–Ω–∏—é *Zabory72.ru* ‚Äì —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ—Ä–æ–≤ ¬´–ø–æ–¥ –∫–ª—é—á¬ª, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∫–∞–º–µ–Ω–Ω—ã—Ö, –∏–∑ –∫–∏—Ä–ø–∏—á–∞ –∏ –∫–µ—Ä–∞–º–∑–∏—Ç–æ–±–ª–æ–∫–æ–≤. –¢–∞–∫–∂–µ –º—ã —Å—Ç—Ä–æ–∏–º –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤–µ—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.
"""

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    kb = InlineKeyboardBuilder()
    kb.button(text="1. –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞–±–æ—Ä–∞", callback_data="choose_fence")
    kb.button(text="2. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calc_cost")
    kb.button(text="3. –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä", callback_data="leave_request")
    kb.button(text="4. –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç", callback_data="examples")
    kb.button(text="5. –í–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É", callback_data="ask_question")
    kb.button(text="6. –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")
    kb.adjust(2)
    return kb.as_markup()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(WELCOME_TEXT, parse_mode=ParseMode.MARKDOWN)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø—É–Ω–∫—Ç:", reply_markup=main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@dp.callback_query(F.data == "choose_fence")
async def choose_fence(callback: CallbackQuery):
    fence_types = [
        "–ó–∞–±–æ—Ä –∏–∑ –ø—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª–∞",
        "–ü—Ä–æ—Ñ–ª–∏—Å—Ç –≤ —Ä–∞–º–∫–µ",
        "–ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ",
        "–ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ",
        "–ó–∞–±–æ—Ä –ñ–∞–ª—é–∑–∏",
        "–ó–∞–±–æ—Ä –†–∞–Ω—á–æ (–¥–≤–æ–π–Ω–æ–π)",
        "–ó–∞–±–æ—Ä –†–∞–Ω—á–æ (–æ–¥–∏–Ω–∞—Ä–Ω—ã–π)",
        "–ó–∞–±–æ—Ä –∏–∑ 3–î —Å–µ—Ç–∫–∏",
        "–í–æ—Ä–æ—Ç–∞ –æ—Ç–∫–∞—Ç–Ω—ã–µ",
        "–í–æ—Ä–æ—Ç–∞ —Ä–∞—Å–ø–∞—à–Ω—ã–µ + –ö–∞–ª–∏—Ç–∫–∞",
        "–ù–∞–≤–µ—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è"
    ]
    kb = InlineKeyboardBuilder()
    for i, ftype in enumerate(fence_types, 1):
        kb.button(text=f"{i}. {ftype}", callback_data=f"fence_{i}")
    kb.adjust(1)
    await callback.message.answer("–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–±–æ—Ä–∞ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=kb.as_markup())
    await callback.answer()

@dp.callback_query(F.data.startswith("fence_"))
async def fence_selected(callback: CallbackQuery):
    await callback.message.answer("–û—Ç–ª–∏—á–Ω–æ! –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏ —Å—Ä–∞–∑—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å?")
    await callback.answer()

# –°—Ç–æ–∏–º–æ—Å—Ç—å
@dp.callback_query(F.data == "calc_cost")
async def calculate_cost(callback: CallbackQuery):
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–∏–ø –∏ –≤—ã—Å–æ—Ç—É –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏.")
    price_table = """
üìê *–ü—Ä–∏–º–µ—Ä–Ω—ã–µ —Ü–µ–Ω—ã ¬´–ø–æ–¥ –∫–ª—é—á¬ª (–º–∞—Ç–µ—Ä–∏–∞–ª—ã + –º–æ–Ω—Ç–∞–∂):*

1. –ü—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª ‚Äì 3474 —Ä—É–±. (h=1.8–º), 3650 —Ä—É–±. (h=2.0–º)  
2. –ü—Ä–æ—Ñ–ª–∏—Å—Ç –≤ —Ä–∞–º–∫–µ ‚Äì 6140 / 6500 —Ä—É–±.  
3. –ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ) ‚Äì 7620 / 8260 —Ä—É–±.  
4. –ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ) ‚Äì 9650 / 10350 —Ä—É–±.  
5. –ñ–∞–ª—é–∑–∏ ‚Äì 8700 —Ä—É–±.  
6. –†–∞–Ω—á–æ (–¥–≤–æ–π–Ω–æ–π) ‚Äì 14500 —Ä—É–±.  
7. –†–∞–Ω—á–æ (–æ–¥–∏–Ω–∞—Ä–Ω—ã–π) ‚Äì 11000 —Ä—É–±.  
8. 3–î —Å–µ—Ç–∫–∞ ‚Äì 3100 —Ä—É–±.  
9. –í–æ—Ä–æ—Ç–∞ –æ—Ç–∫–∞—Ç–Ω—ã–µ ‚Äì 87000 —Ä—É–±.  
10. –í–æ—Ä–æ—Ç–∞ —Ä–∞—Å–ø–∞—à–Ω—ã–µ + –∫–∞–ª–∏—Ç–∫–∞ ‚Äì 37000 —Ä—É–±.  
11. –ù–∞–≤–µ—Å—ã ‚Äì –æ—Ç 7500 —Ä—É–±./–º¬≤
"""
    await callback.message.answer(price_table, parse_mode=ParseMode.MARKDOWN)
    await callback.answer()

# –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä
@dp.callback_query(F.data == "leave_request")
async def leave_request(callback: CallbackQuery):
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º –≤–∞—à–µ –∏–º—è, –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞ –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä.")
    await callback.answer()

# –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç
@dp.callback_query(F.data == "examples")
async def examples(callback: CallbackQuery):
    await callback.message.answer("–í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç (—Ñ–æ—Ç–æ –¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ). –¢–∞–∫–∂–µ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ [–Ω–∞—à–µ–π –≥—Ä—É–ø–ø–µ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ](https://vk.com/zabory72).", parse_mode=ParseMode.MARKDOWN)
    await callback.answer()

# –í–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
@dp.callback_query(F.data == "ask_question")
async def ask_specialist(callback: CallbackQuery):
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –Ω–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    await callback.answer()

# –ö–æ–Ω—Ç–∞–∫—Ç—ã
@dp.callback_query(F.data == "contacts")
async def contacts(callback: CallbackQuery):
    contact_text = """
üìû *–ö–æ–Ω—Ç–∞–∫—Ç—ã:*

–¢–µ–ª–µ—Ñ–æ–Ω: +7 (3452) 500-600  
–°–∞–π—Ç: [https://zabory72.ru](https://zabory72.ru)  
E-mail: info@zabory72.ru  
"""
    await callback.message.answer(contact_text, parse_mode=ParseMode.MARKDOWN)
    await callback.answer()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

