import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart, Command

# –£–∫–∞–∂–∏ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = "7853853505:AAEhTPDeWUlX67naGu5JhW9-maep1yesUD0"
ADMIN_ID = 1346038165  # –£–∫–∞–∂–∏ —Å–≤–æ–π Telegram user ID

# –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
main_menu_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="1. –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞–±–æ—Ä–∞", callback_data="choose_type")],
    [InlineKeyboardButton(text="2. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calculate")],
    [InlineKeyboardButton(text="3. –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä", callback_data="order_measure")],
    [InlineKeyboardButton(text="4. –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç", callback_data="examples")],
    [InlineKeyboardButton(text="5. –í–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É", callback_data="ask_question")],
    [InlineKeyboardButton(text="6. –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")],
])

type_menu_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª", callback_data="type_profnastil")],
    [InlineKeyboardButton(text="–°–µ—Ç–∫–∞-—Ä–∞–±–∏—Ü–∞", callback_data="type_rabica")],
    [InlineKeyboardButton(text="–ú–µ—Ç–∞–ª–ª–æ–ø—Ä–æ—Ñ–∏–ª—å", callback_data="type_metall")],
    [InlineKeyboardButton(text="–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∑–∞–±–æ—Ä", callback_data="type_wood")],
    [InlineKeyboardButton(text="–®—Ç–∞–∫–µ—Ç–Ω–∏–∫", callback_data="type_shtaket")],
    [InlineKeyboardButton(text="–ï–≤—Ä–æ–∑–∞–±–æ—Ä", callback_data="type_euro")],
    [InlineKeyboardButton(text="–î—Ä—É–≥–æ–π / –ù–µ —É–≤–µ—Ä–µ–Ω", callback_data="type_other")],
])

followup_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="more_info")],
    [InlineKeyboardButton(text="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calculate")],
])

# –ú–∞—à–∏–Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π
class CalcForm(StatesGroup):
    length = State()
    height = State()
    type = State()
    gates = State()
    name = State()
    phone = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –∫–æ–º–ø–∞–Ω–∏—é <b>Zabory72.ru</b>\n"
        "–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ—Ä–æ–≤ –ø–æ–¥ –∫–ª—é—á –∏ –Ω–∞–≤–µ—Å–æ–≤.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu_kb
    )

@dp.callback_query(F.data == "choose_type")
async def choose_type(callback: CallbackQuery):
    await callback.message.edit_text("–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–±–æ—Ä–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=type_menu_kb)

@dp.callback_query(F.data.startswith("type_"))
async def show_type_options(callback: CallbackQuery):
    await callback.message.answer("–û—Ç–ª–∏—á–Ω–æ! –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–ª–∏ —Å—Ä–∞–∑—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å?", reply_markup=followup_kb)

@dp.callback_query(F.data == "calculate")
async def calc_start(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∑–∞–±–æ—Ä–∞ (–≤ –º–µ—Ç—Ä–∞—Ö):")
    await state.set_state(CalcForm.length)

@dp.message(CalcForm.length)
async def calc_height(message: Message, state: FSMContext):
    await state.update_data(length=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –∑–∞–±–æ—Ä–∞ (–≤ –º–µ—Ç—Ä–∞—Ö):")
    await state.set_state(CalcForm.height)

@dp.message(CalcForm.height)
async def calc_type(message: Message, state: FSMContext):
    await state.update_data(height=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –∑–∞–±–æ—Ä–∞:")
    await state.set_state(CalcForm.type)

@dp.message(CalcForm.type)
async def calc_gates(message: Message, state: FSMContext):
    await state.update_data(type=message.text)
    await message.answer("–ù—É–∂–Ω—ã –ª–∏ –≤–æ—Ä–æ—Ç–∞/–∫–∞–ª–∏—Ç–∫–∞? (–≤–∞—Ä–∏–∞–Ω—Ç—ã: –≤–æ—Ä–æ—Ç–∞, –∫–∞–ª–∏—Ç–∫–∞, –æ–±–∞, –Ω–µ –Ω—É–∂–Ω–æ)")
    await state.set_state(CalcForm.gates)

@dp.message(CalcForm.gates)
async def calc_name(message: Message, state: FSMContext):
    await state.update_data(gates=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await state.set_state(CalcForm.name)

@dp.message(CalcForm.name)
async def calc_phone(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    await state.set_state(CalcForm.phone)

@dp.message(CalcForm.phone)
async def calc_finish(message: Message, state: FSMContext):
    await state.update_data(phone=message.text)
    data = await state.get_data()
    await state.clear()

    msg = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—á–µ—Ç:\n"
        f"–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å: {data['length']} –º\n"
        f"–í—ã—Å–æ—Ç–∞: {data['height']} –º\n"
        f"–¢–∏–ø: {data['type']}\n"
        f"–í–æ—Ä–æ—Ç–∞/–ö–∞–ª–∏—Ç–∫–∞: {data['gates']}\n"
        f"–ò–º—è: {data['name']}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}"
    )
    await message.answer("–°–ø–∞—Å–∏–±–æ! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
    await bot.send_message(chat_id=ADMIN_ID, text=msg)

@dp.callback_query(F.data == "order_measure")
async def order_measure(callback: CallbackQuery):
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –∞–¥—Ä–µ—Å –¥–ª—è –∑–∞–º–µ—Ä–∞.")

@dp.callback_query(F.data == "examples")
async def examples(callback: CallbackQuery):
    await callback.message.answer("–ü—Ä–∏–º–µ—Ä—ã –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç: (—Ñ–æ—Ç–æ –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—é–¥–∞)")

@dp.callback_query(F.data == "ask_question")
async def ask_question(callback: CallbackQuery):
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç.")

@dp.callback_query(F.data == "contacts")
async def contacts(callback: CallbackQuery):
    await callback.message.answer(
        "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n"
        "üìç –ê–¥—Ä–µ—Å: –≥. –¢—é–º–µ–Ω—å, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è 1\n"
        "üìû –¢–µ–ª–µ—Ñ–æ–Ω: +7 (3452) 000-000\n"
        "üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ü–Ω-–°–± 9:00‚Äì18:00\n"
        "üåê –°–∞–π—Ç: https://zabory72.ru"
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())




