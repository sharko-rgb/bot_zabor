import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InputFile, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, ConversationHandler, CallbackQueryHandler, filters

logging.basicConfig(level=logging.INFO)

TG_ADMIN_ID = 1346038165  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

menu_buttons = [[
    "üî© –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞–±–æ—Ä–∞",
    "üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å"
], [
    "üìê –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä",
    "üñº –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç"
], [
    "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É",
    "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"
]]

fence_types = [
    "–ó–∞–±–æ—Ä –∏–∑ –ø—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª–∞",
    "–ó–∞–±–æ—Ä ¬´–ø—Ä–æ—Ñ–ª–∏—Å—Ç –≤ —Ä–∞–º–∫–µ¬ª",
    "–ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ",
    "–ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ",
    "–ó–∞–±–æ—Ä –ñ–∞–ª—é–∑–∏",
    "–ó–∞–±–æ—Ä –†–∞–Ω—á–æ (–¥–≤–æ–π–Ω–æ–π)",
    "–ó–∞–±–æ—Ä –†–∞–Ω—á–æ (–æ–¥–∏–Ω–∞—Ä–Ω—ã–π)",
    "–ó–∞–±–æ—Ä –∏–∑ 3–î —Å–µ—Ç–∫–∏",
    "–í–æ—Ä–æ—Ç–∞ –æ—Ç–∫–∞—Ç–Ω—ã–µ",
    "–í–æ—Ä–æ—Ç–∞ —Ä–∞—Å–ø–∞—à–Ω—ã–µ + –ö–∞–ª–∏—Ç–∫–∞",
    "–ù–∞–≤–µ—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è"
]

price_table = {
    "–ó–∞–±–æ—Ä –∏–∑ –ø—Ä–æ—Ñ–Ω–∞—Å—Ç–∏–ª–∞": {"1.8": 3474, "2.0": 3650},
    "–ó–∞–±–æ—Ä ¬´–ø—Ä–æ—Ñ–ª–∏—Å—Ç –≤ —Ä–∞–º–∫–µ¬ª": {"1.8": 6140, "2.0": 6500},
    "–ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ": {"1.8": 7620, "2.0": 8260},
    "–ï–≤—Ä–æ—à—Ç–∞–∫–µ—Ç–Ω–∏–∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ": {"1.8": 9650, "2.0": 10350},
    "–ó–∞–±–æ—Ä –ñ–∞–ª—é–∑–∏": {"1.8": 8700},
    "–ó–∞–±–æ—Ä –†–∞–Ω—á–æ (–¥–≤–æ–π–Ω–æ–π)": {"1.8": 14500},
    "–ó–∞–±–æ—Ä –†–∞–Ω—á–æ (–æ–¥–∏–Ω–∞—Ä–Ω—ã–π)": {"1.8": 11000},
    "–ó–∞–±–æ—Ä –∏–∑ 3–î —Å–µ—Ç–∫–∏": {"1.8": 3100},
    "–í–æ—Ä–æ—Ç–∞ –æ—Ç–∫–∞—Ç–Ω—ã–µ": {"1.8": 87000},
    "–í–æ—Ä–æ—Ç–∞ —Ä–∞—Å–ø–∞—à–Ω—ã–µ + –ö–∞–ª–∏—Ç–∫–∞": {"1.8": 37000},
    "–ù–∞–≤–µ—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è": {"1.8": 7500}
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –∫–æ–º–ø–∞–Ω–∏—é Zabory72.ru ‚Äî —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ—Ä–æ–≤ –ø–æ–¥ –∫–ª—é—á, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∫–∞–º–µ–Ω–Ω—ã—Ö, –∏–∑ –∫–∏—Ä–ø–∏—á–∞ –∏ –∫–µ—Ä–∞–º–∑–∏—Ç–æ–±–ª–æ–∫–æ–≤. –¢–∞–∫–∂–µ –º—ã —Å—Ç—Ä–æ–∏–º –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤–µ—Å—ã –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.\n\n–ß–µ–º –º–æ–∂–µ–º –ø–æ–º–æ—á—å?",
        reply_markup=ReplyKeyboardMarkup(menu_buttons, resize_keyboard=True)
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üî© –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –∑–∞–±–æ—Ä–∞":
        keyboard = [[KeyboardButton(ftype)] for ftype in fence_types]
        await update.message.reply_text("–ö–∞–∫–æ–π —Ç–∏–ø –∑–∞–±–æ—Ä–∞ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))
        return 20
    elif text == "üí∞ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Ç—è–∂—ë–Ω–Ω–æ—Å—Ç—å –∑–∞–±–æ—Ä–∞ (–≤ –º–µ—Ç—Ä–∞—Ö):")
        return 30
    elif text == "üìê –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
        return 1
    elif text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É":
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:")
        return 10
    elif text == "üñº –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç":
        await update.message.reply_photo(photo=InputFile("photo1.jpg"), caption="–ó–∞–±–æ—Ä –ñ–∞–ª—é–∑–∏, –≥. –¢—é–º–µ–Ω—å")
        return ConversationHandler.END
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await update.message.reply_text(
            "–≥. –¢—é–º–µ–Ω—å, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, 1\n–¢–µ–ª: +7 (3452) 00-00-00\nEmail: info@zabory72.ru\n–°–∞–π—Ç: https://zabory72.ru\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –ü–Ω‚Äì–°–± —Å 09:00 –¥–æ 18:00"
        )
        return ConversationHandler.END
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.")
        return ConversationHandler.END

# –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä
user_data = {}

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data['name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:")
    return 2

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data['phone'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:")
    return 3

async def get_address(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data['address'] = update.message.text
    await update.message.reply_text("–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):")
    return 4

async def get_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data['time'] = update.message.text
    message = f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–º–µ—Ä\nüë§ ID: {update.message.from_user.id}\n–ò–º—è: {user_data['name']}\n–¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n–ê–¥—Ä–µ—Å: {user_data['address']}\n–í—Ä–µ–º—è: {user_data['time']}"
    await context.bot.send_message(chat_id=TG_ADMIN_ID, text=message)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    return ConversationHandler.END

# –í–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
async def get_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    question = update.message.text
    message = f"üì• –í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{user.username if user.username else user.id}:\n{question}"
    await context.bot.send_message(chat_id=TG_ADMIN_ID, text=message)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    return ConversationHandler.END

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞–±–æ—Ä–∞
async def fence_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    fence = update.message.text
    await update.message.reply_text(f"–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏: {fence}. –•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –∏–ª–∏ —Å—Ä–∞–∑—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å?",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="details"), InlineKeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="calc")]
        ])
    )
    return ConversationHandler.END

# –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
calc_data = {}

async def get_length(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        calc_data['length'] = float(update.message.text)
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É –∑–∞–±–æ—Ä–∞ (1.8 –∏–ª–∏ 2.0):")
        return 31
    except ValueError:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")
        return 30

async def get_height(update: Update, context: ContextTypes.DEFAULT_TYPE):
    calc_data['height'] = update.message.text
    keyboard = [[KeyboardButton(ftype)] for ftype in fence_types]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–±–æ—Ä–∞:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))
    return 32

async def get_fence_type(update: Update, context: ContextTypes.DEFAULT_TYPE):
    calc_data['type'] = update.message.text
    await update.message.reply_text("–ù—É–∂–Ω—ã –ª–∏ –≤–æ—Ä–æ—Ç–∞ –∏–ª–∏ –∫–∞–ª–∏—Ç–∫–∞? (–í–æ—Ä–æ—Ç–∞, –ö–∞–ª–∏—Ç–∫–∞, –û–±–∞, –ù–µ –Ω—É–∂–Ω–æ):")
    return 33

async def get_extras(update: Update, context: ContextTypes.DEFAULT_TYPE):
    calc_data['extra'] = update.message.text
    base_price = price_table.get(calc_data['type'], {}).get(calc_data['height'], 0)
    total = base_price * calc_data['length']
    if calc_data['extra'] == "–í–æ—Ä–æ—Ç–∞":
        total += 20000
    elif calc_data['extra'] == "–ö–∞–ª–∏—Ç–∫–∞":
        total += 10000
    elif calc_data['extra'] == "–û–±–∞":
        total += 30000
    await update.message.reply_text(f"–ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {int(total)} —Ä—É–±.\n–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞:")
    return 34

async def get_contact_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    name = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω:")
    return 35

async def get_contact_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = update.message.text
    message = f"üì• –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏\nüë§ ID: {update.message.from_user.id}\n–¢–∏–ø: {calc_data['type']}\n–î–ª–∏–Ω–∞: {calc_data['length']} –º\n–í—ã—Å–æ—Ç–∞: {calc_data['height']}\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: {calc_data['extra']}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
    await context.bot.send_message(chat_id=TG_ADMIN_ID, text=message)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞.")
    return ConversationHandler.END

if __name__ == '__main__':
    app = ApplicationBuilder().token("7853853505:AAEhTPDeWUlX67naGu5JhW9-maep1yesUD0").build()

    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message)],
        states={
            1: [MessageHandler(filters.TEXT, get_name)],
            2: [MessageHandler(filters.TEXT, get_phone)],
            3: [MessageHandler(filters.TEXT, get_address)],
            4: [MessageHandler(filters.TEXT, get_time)],
            10: [MessageHandler(filters.TEXT, get_question)],
            20: [MessageHandler(filters.TEXT, fence_choice)],
            30: [MessageHandler(filters.TEXT, get_length)],
            31: [MessageHandler(filters.TEXT, get_height)],
            32: [MessageHandler(filters.TEXT, get_fence_type)],
            33: [MessageHandler(filters.TEXT, get_extras)],
            34: [MessageHandler(filters.TEXT, get_contact_name)],
            35: [MessageHandler(filters.TEXT, get_contact_phone)],
        },
        fallbacks=[]
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.run_polling()
















